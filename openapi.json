{"openapi": "3.1.0", "info": {"title": "LangQC", "version": "0.1.0"}, "paths": {"/pacbio/wells": {"get": {"tags": ["pacbio"], "summary": "Get a list of runs with wells filtered by status", "description": "Taking an optional 'qc_status' as a query parameter, returns a list of\n         runs with wells filtered by status. The default qc status is 'inbox'.\n         Possible values for this parameter are defined in QcFlowStatusEnum.\n\n         The list is paged according to non-optional parameters `page_size` and\n         `page_number`.", "operationId": "get_wells_filtered_by_status_pacbio_wells_get", "parameters": [{"name": "page_size", "in": "query", "required": true, "schema": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0}, {"type": "null"}], "title": "Page Size"}}, {"name": "page_number", "in": "query", "required": true, "schema": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0}, {"type": "null"}], "title": "Page Number"}}, {"name": "qc_status", "in": "query", "required": false, "schema": {"allOf": [{"$ref": "#/components/schemas/QcFlowStatusEnum"}], "default": "inbox", "title": "Qc Status"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PacBioPagedWells"}}}}, "500": {"description": "Unexpected error"}, "422": {"description": "Invalid query parameter value"}}}}, "/pacbio/run/{run_name}": {"get": {"tags": ["pacbio"], "summary": "Get a list of wells for a run", "description": "Returns a list of wells that belong to the run with the run name\n    given by the last component of the URL.\n    The list is paged according to optional parameters `page_size` and\n    `page_number`, which default to 20 and 1 respectively. For the\n    majority of runs all wells will fit into the first page of the\n    default size.", "operationId": "get_wells_in_run_pacbio_run__run_name__get", "parameters": [{"name": "run_name", "in": "path", "required": true, "schema": {"type": "string", "title": "Run Name"}}, {"name": "page_size", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0}, {"type": "null"}], "default": 20, "title": "Page Size"}}, {"name": "page_number", "in": "query", "required": false, "schema": {"anyOf": [{"type": "integer", "exclusiveMinimum": 0}, {"type": "null"}], "default": 1, "title": "Page Number"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PacBioPagedWells"}}}}, "500": {"description": "Unexpected error"}, "404": {"description": "Run not found"}, "422": {"description": "Validation Error", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/HTTPValidationError"}}}}}}}, "/pacbio/wells/{id_product}/libraries": {"get": {"tags": ["pacbio"], "summary": "Get well summary and LIMS data for all libraries", "operationId": "get_well_lims_info_pacbio_wells__id_product__libraries_get", "parameters": [{"name": "id_product", "in": "path", "required": true, "schema": {"type": "string", "title": "Id Product"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PacBioWellLibraries"}}}}, "500": {"description": "Unexpected error"}, "404": {"description": "Well product does not exist"}, "422": {"description": "Invalid product ID"}, "409": {"description": "Missing or incomplete LIMS data"}}}}, "/pacbio/products/{id_product}/seq_level": {"get": {"tags": ["pacbio"], "summary": "Get full sequencing QC metrics and state for a product", "operationId": "get_seq_metrics_pacbio_products__id_product__seq_level_get", "parameters": [{"name": "id_product", "in": "path", "required": true, "schema": {"type": "string", "title": "Id Product"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/PacBioWellFull"}}}}, "500": {"description": "Unexpected error"}, "404": {"description": "Well product does not exist"}, "422": {"description": "Invalid product ID"}}}}, "/pacbio/products/{id_product}/seq_level/pool": {"get": {"tags": ["pacbio"], "summary": "Get sample (deplexing) metrics for a multiplexed well product by the well ID", "operationId": "get_product_metrics_pacbio_products__id_product__seq_level_pool_get", "parameters": [{"name": "id_product", "in": "path", "required": true, "schema": {"type": "string", "title": "Id Product"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"anyOf": [{"$ref": "#/components/schemas/QCPoolMetrics"}, {"type": "null"}], "title": "Response Get Product Metrics Pacbio Products  Id Product  Seq Level Pool Get"}}}}, "500": {"description": "Unexpected error"}, "404": {"description": "Product not found"}, "409": {"description": "Missing or incomplete LIMS data"}, "422": {"description": "Invalid product ID"}}}}, "/pacbio/products/{id_product}/qc_claim": {"post": {"tags": ["pacbio"], "summary": "Claim the well to start QC", "description": "Enables the user to initiate manual QC of the well. The resulting QC state\n    is flagged as preliminary. Not every authenticated user is allowed to perform QC.\n\n    A prerequisite to starting manual QC is existence of the well record\n    in the ml warehouse database.\n\n    Initiating manual QC on a well that already has been claimed or has any\n    other QC state is not allowed.", "operationId": "claim_qc_pacbio_products__id_product__qc_claim_post", "parameters": [{"name": "id_product", "in": "path", "required": true, "schema": {"type": "string", "title": "Id Product"}}, {"name": "oidc_claim_email", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Oidc Claim Email"}}], "responses": {"201": {"description": "Well successfully claimed", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QcState"}}}}, "500": {"description": "Unexpected error"}, "422": {"description": "Invalid query parameter value"}, "404": {"description": "Well does not exist"}, "409": {"description": "Well has already been claimed"}}}}, "/pacbio/products/{id_product}/qc_assign": {"put": {"tags": ["pacbio"], "summary": "Assign QC state to a well", "description": "Enables the user to assign a new QC state to a well. The well QC should\n    have been already claimed. The user performing the operation should\n    be the user who assigned the current QC state of the well.", "operationId": "assign_qc_state_pacbio_products__id_product__qc_assign_put", "parameters": [{"name": "id_product", "in": "path", "required": true, "schema": {"type": "string", "title": "Id Product"}}, {"name": "oidc_claim_email", "in": "header", "required": false, "schema": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Oidc Claim Email"}}], "requestBody": {"required": true, "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QcStateBasic"}}}}, "responses": {"200": {"description": "Well QC state updated", "content": {"application/json": {"schema": {"$ref": "#/components/schemas/QcState"}}}}, "500": {"description": "Unexpected error"}, "400": {"description": "Request details are incorrect"}, "403": {"description": "User cannot perform QC"}, "422": {"description": "Invalid query parameter value"}, "409": {"description": "Requested operation is not allowed"}}}}, "/products/qc": {"post": {"tags": ["product"], "summary": "Returns product QC states for a list of product IDs", "description": "The response is an object whose keys are the given product IDs,\n    and the values are lists of QcState records of any type.\n\n    An invalid product ID, which should be a hexadecimal of length 64,\n    triggers an error response.\n\n    Product IDs for which no QC states are available are omitted\n    from the response. The response may be an empty object.\n\n    This API endpoint is used by the ml warehouse loader for PacBio data, see\n    https://github.com/wtsi-npg/npg_ml_warehouse/blob/49.0.0/lib/npg_warehouse/loader/pacbio/qc_state.pm", "operationId": "bulk_qc_fetch_products_qc_post", "requestBody": {"required": true, "content": {"application/json": {"schema": {"type": "array", "items": {"type": "string"}, "title": "Request Body"}}}}, "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/components/schemas/QcState"}}, "title": "Response Bulk Qc Fetch Products Qc Post"}}}}, "500": {"description": "Unexpected error"}, "422": {"description": "Invalid product ID"}}}, "get": {"tags": ["product"], "summary": "Returns a dictionary of QC states", "description": "The response is a dictionary of lists of QcState models hashed on product IDs.\n    Multiple QC states for the same product might be returned if the query is not\n    constrained to a single QC type.\n\n    Query parameters constrain the semantics of the response.\n        `weeks`  - number of weeks to look back, defaults to four.\n        `seq_level` - a boolean option. If `True`, only `sequencing` type QC states\n            are returned. If `False` (the default), all types of QC states are\n            returned.\n        `final` - a boolean option. If `True`, only final QC states are returned.\n            If `False` (the default), both final and preliminary QC states are\n            returned.", "operationId": "qc_fetch_products_qc_get", "parameters": [{"name": "weeks", "in": "query", "required": false, "schema": {"type": "integer", "exclusiveMinimum": 0, "default": 4, "title": "Weeks"}}, {"name": "seq_level", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Seq Level"}}, {"name": "final", "in": "query", "required": false, "schema": {"type": "boolean", "default": false, "title": "Final"}}], "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "additionalProperties": {"type": "array", "items": {"$ref": "#/components/schemas/QcState"}}, "title": "Response Qc Fetch Products Qc Get"}}}}, "500": {"description": "Unexpected error"}, "422": {"description": "Invalid number of weeks"}}}}, "/config": {"get": {"tags": ["config"], "summary": "A helper for the front end renderer.", "description": "Returns a dictionary with configuration options.\n\n    Under the `qc_flow_states` key returns a list of QcFlowStatus objects,\n    which corresponds to known QC flow states. The list is sorted in the temporal\n    order of the manual QC process. To ensure that the UI is in synch with the\n    back end, this list can be used by the frontend code.\n\n    Under the `qc_states` key returns a list of QC states, which should be\n    possible to assign via the UI. Each QC state is a dictionary with two entries,\n    a `description` and a boolean flag `only_prelim`. This flag is set to `True`\n    for those QC dictionary states that cannot be final.", "operationId": "get_config_config_get", "responses": {"200": {"description": "Successful Response", "content": {"application/json": {"schema": {"type": "object", "title": "Response Get Config Config Get"}}}}}}}}, "components": {"schemas": {"HTTPValidationError": {"properties": {"detail": {"items": {"$ref": "#/components/schemas/ValidationError"}, "type": "array", "title": "Detail"}}, "type": "object", "title": "HTTPValidationError"}, "PacBioExperiment": {"properties": {"study_id": {"items": {}, "type": "array", "title": "Study identifier", "description": "\n        Study identifiers as a sorted list of unique strings (to cover\n        an unlikely case of multiple studies).\n        "}, "study_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Study name", "description": "\n        Study name, is not set in case of multiple studies.\n        "}, "sample_id": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sample identifier", "description": "\n        Sample identifier, is not set in case of multiple samples.\n        "}, "sample_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sample name", "description": "\n        Sample name, is not set in case of multiple samples.\n        "}, "num_samples": {"type": "integer", "title": "Number of samples", "description": "\n        Number of samples. If the data is for a well, multiple\n        samples might be present.\n        ", "default": 1}, "tag_sequence": {"items": {}, "type": "array", "title": "Tag sequence", "description": "\n        Tag sequences as a list. The list is empty in case of multiple\n        samples or if the library for the only present sample does not\n        have the index sequence.\n        "}, "library_type": {"items": {}, "type": "array", "title": "Library type", "description": "\n        Library types as a sorted list of unique strings to cover an\n        unlikely case of multiple library types.\n        "}, "pool_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pool name", "description": "\n        The pac_bio_library_tube_barcode from TRACTION, AKA pool name\n        "}}, "type": "object", "required": ["study_id", "tag_sequence", "library_type"], "title": "PacBioExperiment", "description": "A response model that contains laboratory tracking information\nabout the PacBio wells and samples prior to the start of the\nsequencing run. The current source of the information is the\nmulti-lims warehouse.\n\nThe model is capable of representing both a well with either a\nsingle sample or multiple samples and a single sample (library).\n\nThe class is agnostic to the nature of the entity it represents.\nIt gives a reasonable representation of data for a multi-sample\nwell. Data for a well can also be modelled as a list of\nPacBioExperiment objects, each object representing a single sample\n(library)."}, "PacBioLibrary": {"properties": {"study_id": {"type": "string", "title": "LIMS-specific study identifier"}, "study_name": {"type": "string", "title": "Study name"}, "sample_id": {"type": "string", "title": "LIMS-specific Sample identifier"}, "sample_name": {"type": "string", "title": "Sample name"}, "tag_sequence": {"items": {}, "type": "array", "title": "Tag sequence", "description": "\n        Tag sequences as a list. An empty list for a non-indexed library.\n        "}, "library_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Library type"}, "pool_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Pool name", "description": "\n        The pac_bio_library_tube_barcode from TRACTION, AKA pool name\n        "}}, "type": "object", "required": ["study_id", "study_name", "sample_id", "sample_name", "tag_sequence"], "title": "PacBioLibrary", "description": "This model represents LIMS data associated with a PacBio library.\n\nThe fields of the model can be assigned directly via the constructor.\nHowever, if the `db_library` field, a single row of the PacBioRun table\nclass, is set via the constructor, the rest of the fields are populated\nusing this database row object, while  any other information passed to the\nconstructor is disregarded.\n\nThe  `db_library` field is not present in the model instance that is\nreturned by the constructor."}, "PacBioPagedWells": {"properties": {"page_size": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Size of the page", "description": "\n        Size of the page, i.e. the number of objects that the client expects\n        to receive.\n        "}, "page_number": {"type": "integer", "exclusiveMinimum": 0.0, "title": "Page sequential number", "description": "\n        The sequential number of the page that is requested by the client.\n        The pages are numbered starting from one.\n        "}, "total_number_of_items": {"type": "integer", "title": "Total number of unpaged objects", "description": "\n        Total number of unpaged objects. Needed by the UI in order to display\n        correct buttons in the paging widget.\n        ", "default": 0}, "wells": {"items": {"$ref": "#/components/schemas/PacBioWellSummary"}, "type": "array", "title": "A list of PacBioWellSummary objects", "description": "\n        A list of `PacBioWellSummary` objects that corresponds to the page number\n        and size specified by the `page_size` and `page_number` attributes.\n        ", "default": []}}, "additionalProperties": false, "type": "object", "required": ["page_size", "page_number"], "title": "PacBioPagedWells", "description": "A response model for paged data about PacBio wells."}, "PacBioWellFull": {"properties": {"id_product": {"type": "string", "title": "Product identifier"}, "label": {"type": "string", "title": "Well label", "description": "The label of the PacBio well"}, "plate_number": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Plate number", "description": "Plate number, relevant for Revio instruments only"}, "run_name": {"type": "string", "title": "Run name", "description": "PacBio run name as registered in LIMS"}, "run_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run start time"}, "run_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run complete time"}, "well_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well start time"}, "well_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well complete time"}, "run_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio run status"}, "well_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio well status"}, "instrument_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument name"}, "instrument_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument type"}, "qc_state": {"anyOf": [{"$ref": "#/components/schemas/QcState"}, {"type": "null"}], "title": "Current QC state of this well", "description": "\n        Current QC state of this well as a QcState pydantic model.\n        The well might have no QC state assigned. Whether the QC state is\n        available depends on the lifecycle stage of this well.\n        "}, "metrics": {"allOf": [{"$ref": "#/components/schemas/QCDataWell"}], "title": "Currently available QC data for well"}, "experiment_tracking": {"anyOf": [{"$ref": "#/components/schemas/PacBioExperiment"}, {"type": "null"}], "title": "Experiment tracking information", "description": "\n        Laboratory experiment tracking information for this well, if available.\n        "}}, "type": "object", "required": ["id_product", "label", "run_name", "metrics"], "title": "PacBioWellFull", "description": "A full response model for a single PacBio well.\n\nThe model has the fields that uniquely define the well (`run_name`, `label`,\n`plate_number`, `id_product`), along with the laboratory experiment and\nsequence run tracking information, current QC state of this well and\nQC data for this well.\n\nInstance creation is described in the documentation of this class's parent\n`PacBioWell`.\n\n`get_experiment_info` method in this package is used to retrieve information\nabout the experiment, see its documentation for details."}, "PacBioWellLibraries": {"properties": {"id_product": {"type": "string", "title": "Product identifier"}, "label": {"type": "string", "title": "Well label", "description": "The label of the PacBio well"}, "plate_number": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Plate number", "description": "Plate number, relevant for Revio instruments only"}, "run_name": {"type": "string", "title": "Run name", "description": "PacBio run name as registered in LIMS"}, "run_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run start time"}, "run_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run complete time"}, "well_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well start time"}, "well_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well complete time"}, "run_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio run status"}, "well_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio well status"}, "instrument_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument name"}, "instrument_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument type"}, "qc_state": {"anyOf": [{"$ref": "#/components/schemas/QcState"}, {"type": "null"}], "title": "Current QC state of this well", "description": "\n        Current QC state of this well as a QcState pydantic model.\n        The well might have no QC state assigned. Whether the QC state is\n        available depends on the lifecycle stage of this well.\n        "}, "libraries": {"items": {"$ref": "#/components/schemas/PacBioLibrary"}, "type": "array", "title": "A list of `PacBioLibrary` objects", "description": "\n        A list of `PacBioLibrary` objects. Each member of the list represents\n        a library, which was sequenced in this well. If the object is created\n        by supplying the `db_well` attribute via the constructor, the list\n        is never empty. The list is not sorted.\n        "}}, "type": "object", "required": ["id_product", "label", "run_name", "libraries"], "title": "PacBioWellLibraries", "description": "A response model binding together basic PacBio well and LIMS data for\nthe libraries, which were sequenced in this well."}, "PacBioWellSummary": {"properties": {"id_product": {"type": "string", "title": "Product identifier"}, "label": {"type": "string", "title": "Well label", "description": "The label of the PacBio well"}, "plate_number": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Plate number", "description": "Plate number, relevant for Revio instruments only"}, "run_name": {"type": "string", "title": "Run name", "description": "PacBio run name as registered in LIMS"}, "run_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run start time"}, "run_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Run complete time"}, "well_start_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well start time"}, "well_complete_time": {"anyOf": [{"type": "string", "format": "date-time"}, {"type": "null"}], "title": "Well complete time"}, "run_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio run status"}, "well_status": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Current PacBio well status"}, "instrument_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument name"}, "instrument_type": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Instrument type"}, "qc_state": {"anyOf": [{"$ref": "#/components/schemas/QcState"}, {"type": "null"}], "title": "Current QC state of this well", "description": "\n        Current QC state of this well as a QcState pydantic model.\n        The well might have no QC state assigned. Whether the QC state is\n        available depends on the lifecycle stage of this well.\n        "}, "study_names": {"items": {}, "type": "array", "title": "An alphabetically sorted list of distinct study names"}}, "type": "object", "required": ["id_product", "label", "run_name", "study_names"], "title": "PacBioWellSummary", "description": "A response model for a summary about a single PacBio well.\n\nAdds `study_names` to a list of attributes of the parent class `PacBioWell`.\nInstance creation is described in the documentation of the parent class.\n\n`get_experiment_info` method in this package is used to retrieve study\ninformation, see its documentation for details."}, "QCDataWell": {"properties": {"smrt_link": {"type": "object", "title": "URL components for a SMRT Link page"}, "binding_kit": {"type": "object", "title": "Binding Kit"}, "control_num_reads": {"type": "object", "title": "Number of Control Reads"}, "control_read_length_mean": {"type": "object", "title": "Control Read Length (bp)"}, "hifi_read_bases": {"type": "object", "title": "CCS Yield (Gb)"}, "hifi_read_length_mean": {"type": "object", "title": "CCS Mean Length (bp)"}, "local_base_rate": {"type": "object", "title": "Local Base Rate"}, "loading_conc": {"type": "object", "title": "Loading concentration (pM)"}, "p0_num": {"type": "object", "title": "P0 %"}, "p1_num": {"type": "object", "title": "P1 %"}, "p2_num": {"type": "object", "title": "P2 %"}, "polymerase_read_bases": {"type": "object", "title": "Total Cell Yield (Gb)"}, "polymerase_read_length_mean": {"type": "object", "title": "Mean Polymerase Read Length (bp)"}, "movie_minutes": {"type": "object", "title": "Run Time (hr)"}, "percentage_deplexed_reads": {"type": "object", "title": "Percentage of reads deplexed"}, "percentage_deplexed_bases": {"type": "object", "title": "Percentage of bases deplexed"}}, "type": "object", "required": ["smrt_link"], "title": "QCDataWell"}, "QCPoolMetrics": {"properties": {"pool_coeff_of_variance": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Coefficient of variance for reads in the pool", "description": "Percentage of the standard deviation w.r.t. mean, when pool is more than one"}, "products": {"items": {"$ref": "#/components/schemas/SampleDeplexingStats"}, "type": "array", "title": "List of products and their metrics"}}, "type": "object", "required": ["pool_coeff_of_variance", "products"], "title": "QCPoolMetrics"}, "QcFlowStatusEnum": {"type": "string", "enum": ["inbox", "in_progress", "on_hold", "qc_complete", "aborted", "unknown", "upcoming"], "title": "QcFlowStatusEnum", "description": "An enumeration of known QC flow statuses. The order of the statuses is\nconsistent with the temporal flow of the manual QC process.\n\nLogically the upcoming status should be in the beginning. In order\nto keep the order of tab consistent with early versions and to separate\nthis status from more relevant to teh QC process statuses, this status\nis placed at the end."}, "QcState": {"properties": {"qc_state": {"type": "string", "title": "QC state", "description": "\n        The QC state of the type defined by the `qc_type` attribute.\n        "}, "is_preliminary": {"type": "boolean", "title": "Preliminary state of the outcome"}, "qc_type": {"type": "string", "title": "Type of QC performed"}, "outcome": {"anyOf": [{"type": "boolean"}, {"type": "null"}], "title": "Boolean QC outcome", "description": "\n        A boolean QC outcome corresponding to the value of the `state` attribute.\n        A False value corresponds to a QC fail, a True value corresponds to a QC\n        pass, an undefined value means that the QC state is neither a pass nor\n        a fail (example - 'on hold').\n        "}, "id_product": {"type": "string", "title": "Unique entity ID"}, "date_created": {"type": "string", "format": "date-time", "title": "Date the initial state was assigned", "description": "\n        Each entity can have a number of QC states associated with it. This date\n        corresponds to the date the initial QC state was assigned.\n        "}, "date_updated": {"type": "string", "format": "date-time", "title": "Date the state was updated", "description": "\n        This date corresponds to the date when the QC state defined by the `state`\n        attribute of this object was assigned.\n        "}, "user": {"type": "string", "title": "User who assigned current QC state"}, "created_by": {"type": "string", "title": "This QC state assignment context", "description": "\n        QC state assignment context, i.e. the name of the web application,\n        script name, JIRA ticket number, etc., which is associated with the\n        assignment of the this QC state.\n        "}}, "type": "object", "title": "QcState", "description": "Represents QC data associated with a QC-able entity.\n\nThe definition of the inherited `qc_state` attribute of this class should\nread as follows:\n    'For an entity defined by the `id_seq_product` attribute value, the\n    assigned QC state of the type defined by the `qc_type` attribute'."}, "QcStateBasic": {"properties": {"qc_state": {"type": "string", "title": "QC state", "description": "\n        The QC state of the type defined by the `qc_type` attribute.\n        "}, "is_preliminary": {"type": "boolean", "title": "Preliminary state of the outcome"}, "qc_type": {"type": "string", "title": "Type of QC performed"}}, "type": "object", "title": "QcStateBasic", "description": "Represents basic QC data associated with a QC-able entity."}, "SampleDeplexingStats": {"properties": {"id_product": {"type": "string", "title": "Id Product"}, "sample_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Sample Name"}, "tag1_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Tag1 Name"}, "tag2_name": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Tag2 Name"}, "deplexing_barcode": {"anyOf": [{"type": "string"}, {"type": "null"}], "title": "Deplexing Barcode"}, "hifi_read_bases": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "HiFi read bases (Gb)"}, "hifi_num_reads": {"anyOf": [{"type": "integer"}, {"type": "null"}], "title": "Hifi Num Reads"}, "hifi_read_length_mean": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Hifi Read Length Mean"}, "hifi_bases_percent": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Hifi Bases Percent"}, "percentage_total_reads": {"anyOf": [{"type": "number"}, {"type": "null"}], "title": "Percentage Total Reads"}}, "type": "object", "required": ["id_product", "sample_name", "tag1_name", "tag2_name", "deplexing_barcode", "hifi_read_bases", "hifi_num_reads", "hifi_read_length_mean", "hifi_bases_percent", "percentage_total_reads"], "title": "SampleDeplexingStats", "description": "A representation of metrics for one product, some direct from the DB and others inferred\n\nFor a long time tag2_name was null and tag1_name was silently used at both ends of the sequence.\nAs a result tag2_name will be None for most data in or before 2024."}, "ValidationError": {"properties": {"loc": {"items": {"anyOf": [{"type": "string"}, {"type": "integer"}]}, "type": "array", "title": "Location"}, "msg": {"type": "string", "title": "Message"}, "type": {"type": "string", "title": "Error Type"}}, "type": "object", "required": ["loc", "msg", "type"], "title": "ValidationError"}}}}